---
import ViewCounter from "@/components/PostDetail/ViewCounter.astro";
import ClockIcon from "@/icons/svg/ClockIcon.astro";
import BookIcon from "@/icons/svg/BookIcon.astro";
import readingTime from "reading-time";
import type { CollectionEntry } from "astro:content";
import type { AstroComponentFactory } from "astro/runtime/server/index.js";
// MainContent component for the post detail center section
type Props = { post: CollectionEntry<"blog">; Content: AstroComponentFactory };
const { post, Content } = Astro.props;
const slug = Astro.params.slug || post.id;
// Calculate reading time
const readingStats = readingTime(post.body ?? "");
const readingMinutes = Math.ceil(readingStats.minutes);
const className = {
  // h2: "text-2xl font-bold mt-8 mb-4",
  // h3: "text-xl font-bold mt-6 mb-3",
  // h4: "text-lg font-bold mt-5 mb-2",
  svg: "inline align-text-bottom",
};
---

<article
  class="prose prose-sm sm:prose-lg mx-auto prose-headings:scroll-mt-top_toc prose-img:rounded-lg prose-a:underline-offset-2 prose-a:no-underline prose-a:hover:underline prose-a:hover:text-cl-link_strong"
>
  <h1 class="text-center mb-5">{post.data.title}</h1>
  <div class="flex gap-4 justify-center text-sm text-cl-text_weak mb-2.5 sm:mb-6">
    <div title="View Count">
      <ViewCounter svgClass={className.svg} slug={slug} />
    </div>
    |
    <time title="Published Date" datetime={post.data.pubDate.toISOString()}>
      <ClockIcon class={className.svg} size={16} />
      {
        post.data.pubDate.toLocaleDateString("en-US", {
          year: "numeric",
          month: "short",
          day: "numeric",
        })
      }
    </time>
    |
    <div title="Reading Time">
      <BookIcon class={className.svg} size={16} />
      {readingMinutes} min read
    </div>
  </div>
  <Content />
</article>
<script>
  async function copyLink(e: Event): Promise<void> {
    const clickOn = e.target as HTMLElement;
    if (clickOn.tagName === "A") return;
    e.preventDefault();
    const registerOn = e.currentTarget as HTMLHeadingElement;
    const anchor = registerOn.querySelector("a") as HTMLAnchorElement;
    if (!anchor) return;
    try {
      const link = anchor.href;
      await navigator.clipboard.writeText(link);
      window.showToast("Link Copied");
    } catch (err) {
      console.error("Failed to copy link: ", err);
      window.showToast("Failed to copy link");
    }
  }
  document
    .querySelector("article.prose")
    ?.querySelectorAll("h2, h3, h4")
    .forEach(h => h.addEventListener("click", copyLink));
</script>
